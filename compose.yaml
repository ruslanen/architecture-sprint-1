services:

  mongo:
    image: mongo
    restart: always
    logging:
      driver: none
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - 27017:27017

  backend-test:
    build:
      context: backend
      dockerfile: ../Dockerfile.backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    command: npm run lint
    restart: 'no'
    depends_on:
      mongo:
        condition: service_healthy

  backend:
    build:
      context: backend
      dockerfile: ../Dockerfile.backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 3001:3000
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js

  frontend-test:
    build:
      context: frontend
      dockerfile: ../Dockerfile.frontend
    command: yarn test:microfrontend
    restart: 'no'
    environment:
          CI: true

  frontend:
    build:
      context: frontend
      dockerfile: ../Dockerfile.frontend
    ports:
      - 8080:8080
    depends_on:
      backend:
        condition: service_healthy
      auth-mf:
        condition: service_healthy
      cards-mf:
        condition: service_healthy
      users-mf:
        condition: service_healthy
      shared-context-mf:
        condition: service_healthy
  
  auth-mf:
    build:
      context: frontend/microfrontend/auth-mf
      dockerfile: ../Dockerfile.auth-mf
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js

  cards-mf:
    build:
      context: frontend/microfrontend/cards-mf
      dockerfile: ../Dockerfile.cards-mf
    depends_on:
      shared-context-mf:
        condition: service_healthy
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js

  users-mf:
    build:
      context: frontend/microfrontend/users-mf
      dockerfile: ../Dockerfile.users-mf
    depends_on:
      shared-context-mf:
        condition: service_healthy
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js

  shared-context-mf:
    build:
      context: frontend/microfrontend/shared-context-mf
      dockerfile: ../Dockerfile.shared-context-mf
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js